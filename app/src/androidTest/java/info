Я написал 4 пользовательских сценария:
1)Добавление нового задания (юнит тесты нужны)
2)Удаление задания (юнит тесты нужны)
3)Попытка удаления пустого задания (юнит тесты не нужны)
4)Появление снекбара при попытке сохранить пустое задание (юнит тесты нужны)

Юнит тестами можно проверить эти классы:
1)ListMerger - не используется ни в однои из пользовательских сценариев выше
2)TodoItemRepository - юнит тесты написаны
3)DataBaseSource - этот класс только вызывает методы у dao, поэтому тесты писать нет смысла
4)ServerSource - этот класс просто делает запросы на сервер и обновляет SharedPreference, тут если и писать тесты,
то это будут тесты ради тестов. Но этот класс может выбрасывать ошибки, поэтому в ui тестах написаны тесты,
которые проверяют, как приложение обрабатывает ошибки (по сути это уже будет проверка класса SnackBarErrorManager)

Предполагается, что все тесты, где проверяется снекбар, проводятся при постоянном подключении к интернету или
его отсутствии, ведь при изменении интернета появится снекбар, который возможно перекроет нужный снэкбар. Хоть
это и можно учесть в тестах, но это не имеет особого смысла, ведь если снэкбары ошибок появляются верно при постоянном
интернете, то при переменном интернете тоже все будет работать